<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2019 Maven Source Dependencies
    Plugin contributors as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.srcdeps.mvn</groupId>
    <artifactId>srcdeps-maven-parent</artifactId>
    <version>4.0.0</version>
  </parent>

  <artifactId>srcdeps-maven-quickstarts</artifactId>
  <packaging>takari-maven-component</packaging>

  <name>Srcdeps Maven Quickstarts</name>
  <description>A set of self contained projects to learn how to configure srcdeps in various Maven scenarios.
      At the same time, these projects are run as integration tests.</description>

  <dependencies>

    <dependency>
      <groupId>io.takari.aether</groupId>
      <artifactId>takari-local-repository</artifactId>
    </dependency>

    <dependency>
      <groupId>io.takari.maven.plugins</groupId>
      <artifactId>takari-plugin-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.takari.maven.plugins</groupId>
      <artifactId>takari-plugin-integration-testing</artifactId>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.srcdeps.core</groupId>
      <artifactId>srcdeps-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.srcdeps.core</groupId>
      <artifactId>srcdeps-core-config-yaml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.srcdeps.mvn</groupId>
      <artifactId>srcdeps-maven-base</artifactId>
    </dependency>

    <dependency>
      <groupId>org.srcdeps.mvn</groupId>
      <artifactId>srcdeps-maven-local-repository</artifactId>
    </dependency>

    <dependency>
      <groupId>org.srcdeps.mvn</groupId>
      <artifactId>srcdeps-maven-enforcer</artifactId>
    </dependency>

    <dependency>
      <groupId>org.srcdeps.mvn</groupId>
      <artifactId>srcdeps-maven-plugin</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!-- To speed up the tests, we use the mrm-maven-plugin to proxy the local Maven repo of the main build so that
           the test child build does not have to download all the dependencies from the Central. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>mrm-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>mrm-start</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>mrm-stop</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>install-srcdeps-maven-plugin</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../srcdeps-maven-plugin/target/srcdeps-maven-plugin-${project.version}.jar</file>
              <pomFile>${project.basedir}/../srcdeps-maven-plugin/pom.xml</pomFile>
              <localRepositoryPath>${project.build.directory}/mvn-local-repo-base</localRepositoryPath>
            </configuration>
          </execution>
          <execution>
            <id>install-srcdeps-local-repository</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../srcdeps-maven-local-repository/target/srcdeps-maven-local-repository-${project.version}.jar</file>
              <pomFile>${project.basedir}/../srcdeps-maven-local-repository/pom.xml</pomFile>
              <localRepositoryPath>${project.build.directory}/mvn-local-repo-base</localRepositoryPath>
            </configuration>
          </execution>
          <execution>
            <id>install-srcdeps-enforcer</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../srcdeps-maven-enforcer/target/srcdeps-maven-enforcer-${project.version}.jar</file>
              <pomFile>${project.basedir}/../srcdeps-maven-enforcer/pom.xml</pomFile>
              <localRepositoryPath>${project.build.directory}/mvn-local-repo-base</localRepositoryPath>
            </configuration>
          </execution>
          <execution>
            <id>install-srcdeps-base</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../srcdeps-maven-base/target/srcdeps-maven-base-${project.version}.jar</file>
              <pomFile>${project.basedir}/../srcdeps-maven-base/pom.xml</pomFile>
              <localRepositoryPath>${project.build.directory}/mvn-local-repo-base</localRepositoryPath>
            </configuration>
          </execution>
          <execution>
            <id>install-srcdeps-maven-parent</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../pom.xml</file>
              <pomFile>${project.basedir}/../pom.xml</pomFile>
              <localRepositoryPath>${project.build.directory}/mvn-local-repo-base</localRepositoryPath>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-settings-mrm</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${basedir}/src/test/resources</directory>
                  <include>settings-mrm.xml</include>
                  <filtering>true</filtering> <!-- to eval ${mrm.repository.url} set by mrm-maven-plugin -->
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkCount>0</forkCount><!-- MavenJUnitTestRunner does not seem to work well with the default forkCount=1 -->
          <systemProperties>
            <basedir>${project.build.directory}</basedir>
            <project.version>${project.version}</project.version>
            <project.build.sourceEncoding>${project.build.sourceEncoding}</project.build.sourceEncoding>
            <mrm.settings.xml>${project.build.directory}/settings-mrm.xml</mrm.settings.xml>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.sisu</groupId>
        <artifactId>sisu-maven-plugin</artifactId>
        <version>${version.sisu-maven-plugin}</version>
        <executions>
          <execution>
            <id>index-project</id>
            <goals>
              <goal>main-index</goal>
              <goal>test-index</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
